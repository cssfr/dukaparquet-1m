name: Update Instruments Metadata
on:
  workflow_run:
    workflows: ["Dukascopy Yearly Consolidation"]  # Triggered by yearly consolidation
    types: [completed]
    branches: [main]
  workflow_dispatch:  # Manual trigger for testing
  schedule:
    - cron: '0 6 1 * *'  # Monthly at 6 AM on the 1st (for keepalive)

jobs:
  update-metadata:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    env:
      MINIO_ENDPOINT: ${{ secrets.MINIO_ENDPOINT }}
      MINIO_KEY:       ${{ secrets.MINIO_KEY }}
      MINIO_SECRET:    ${{ secrets.MINIO_SECRET }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Report trigger status
        run: |
          echo "Triggered by workflow: ${{ github.event.workflow_run.workflow_id }}"
          echo "Yearly consolidation status: ${{ github.event.workflow_run.conclusion }}"
          echo "Yearly consolidation run: ${{ github.event.workflow_run.html_url }}"
      
      - name: Install tools and dependencies
        run: |
          pip install polars pyarrow pyyaml yq jq
          curl -s https://dl.min.io/client/mc/release/linux-amd64/mc \
               -o /usr/local/bin/mc && chmod +x /usr/local/bin/mc
          mc alias set myminio "$MINIO_ENDPOINT" "$MINIO_KEY" "$MINIO_SECRET"
      
      - name: Download current instruments.json
        run: |
          echo "Downloading current instruments metadata"
          mc cp myminio/dukascopy-node/metadata/instruments.json ./instruments.json
      
      - name: Scan data boundaries and update metadata
        run: |
          echo "Scanning actual data files to determine boundaries"
          python update_instruments_metadata.py
      
      - name: Upload updated instruments.json
        run: |
          echo "Uploading updated instruments metadata"
          mc cp ./instruments.json myminio/dukascopy-node/metadata/instruments.json
          echo "Metadata update completed"
      
      - name: Reload FastAPI Cache
        run: |
          echo "Reloading FastAPI cache..."
          response=$(curl -s -w "%{http_code}" -X POST \
            "https://f-stage.backtesting.theworkpc.com/api/v1/ohlcv/instruments/reload?api_key=${{ secrets.CACHE_RELOAD_API_KEY }}" \
            -H "User-Agent: GitHub-Actions-InstrumentUpdate" \
            -H "Accept: application/json")
          
          http_code="${response: -3}"
          if [ "$http_code" -eq 200 ]; then
            echo "Cache reload successful"
          else
            echo "Cache reload failed with HTTP $http_code"
            exit 1
          fi

  workflow-keepalive:
    # if: github.event_name == 'schedule'
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule' }}
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - uses: liskin/gh-workflow-keepalive@v1.2.1
